name: Rust

on:
  push:
    branches: ['master']
  pull_request:
    branches: ['master']

env:
  CARGO_TERM_COLOR: always

jobs:
  build-test:
    runs-on: ubuntu-24.04
    if: ${{ github.event_name == 'pull_request' && !github.event.pull_request.draft }}
    steps:
      - uses: actions/checkout@ee0669bd1cc54295c223e0bb666b733df41de1c5 # v2
      - uses: ./.github/actions/setup-environment
      - name: Build
        run: cargo build
      - name: Run tests
        run: cargo test --verbose

  check-format:
    runs-on: ubuntu-24.04
    if: ${{ github.event_name == 'pull_request' && !github.event.pull_request.draft }}
    steps:
      - uses: actions/checkout@ee0669bd1cc54295c223e0bb666b733df41de1c5 # v2
      - name: Install rustfmt
        run: rustup component add rustfmt
      - name: Check formatting
        run: cargo fmt -- --check

  check-clippy:
    runs-on: ubuntu-24.04
    if: ${{ github.event_name == 'pull_request' && !github.event.pull_request.draft }}
    steps:
      - uses: actions/checkout@ee0669bd1cc54295c223e0bb666b733df41de1c5 # v2
      - uses: ./.github/actions/setup-environment
      - name: Install clippy
        run: rustup component add clippy
      - name: Run clippy
        run: cargo clippy --verbose

  check-audit:
    runs-on: ubuntu-24.04
    if: ${{ github.event_name == 'pull_request' && !github.event.pull_request.draft }}
    steps:
      - uses: actions/checkout@ee0669bd1cc54295c223e0bb666b733df41de1c5 # v2
      - uses: ./.github/actions/setup-environment
      - name: Install cargo-audit from crates.io
        uses: baptiste0928/cargo-install@v3
        with:
          crate: cargo-audit
          version: 'latest'
      - name: Run cargo audit
        run: cargo audit

  coverage:
    runs-on: ubuntu-24.04
    if: ${{ github.event_name == 'push' || !github.event.pull_request.draft }}
    steps:
      - uses: actions/checkout@ee0669bd1cc54295c223e0bb666b733df41de1c5 # v2
      - uses: ./.github/actions/setup-environment

      - name: Install cargo-llvm-cov from crates.io
        uses: baptiste0928/cargo-install@v3
        with:
          crate: cargo-llvm-cov
          version: '0.6.18'

      - name: Generate coverage report
        run: cargo llvm-cov --no-fail-fast  --include-ffi --workspace --lcov --output-path lcov.info

      - name: Upload to Codecov
        uses: codecov/codecov-action@v4
        with:
          files: lcov.info
          fail_ci_if_error: true
          token: ${{ secrets.CODECOV_TOKEN }}
          verbose: true

  test-miri:
    runs-on: ubuntu-24.04
    if: ${{ github.event_name == 'pull_request' && !github.event.pull_request.draft }}
    steps:
    - uses: actions/checkout@ee0669bd1cc54295c223e0bb666b733df41de1c5 # v2
    - uses: ./.github/actions/setup-environment
    - name: Install Nightly Rust toolchain
      uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        # Miri requires nightly Rust
        toolchain: nightly-2025-01-03
        override: true
        components: miri

    - name: Setup Miri
      run: cargo +nightly-2025-01-03 miri setup
    - name: Run tests inside Miri
      run: cargo +nightly-2025-01-03 miri test
